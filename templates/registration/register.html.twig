{% extends 'base.html.twig' %}

{% block title %}Inscription{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow bg-card border-primary">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h4 mb-0">Inscription Utilisateur</h2>
                    </div>
                    <div class="card-body text-white">
                        {% for flash_error in app.flashes('error') %}
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                {{ flash_error }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}

                        {% for flash_success in app.flashes('success') %}
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                {{ flash_success }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}

                        {{ form_start(registrationForm, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="mb-3">
                                {{ form_label(registrationForm.email, 'Email', {'label_attr': {'class': 'form-label text-white'}}) }}
                                {{ form_widget(registrationForm.email, {
                                    'attr': {
                                        'class': 'form-control bg-dark text-white border-secondary',
                                        'placeholder': 'exemple@3innov.fr',
                                        'required': 'required'
                                    }
                                }) }}
                                <div class="form-text text-light opacity-75">Utilisez votre adresse email professionnelle</div>
                                <div class="invalid-feedback">
                                    {{ form_errors(registrationForm.email) }}
                                </div>
                            </div>

                            <div class="mb-3">
                                {{ form_label(registrationForm.nom, 'Nom', {'label_attr': {'class': 'form-label text-white'}}) }}
                                {{ form_widget(registrationForm.nom, {
                                    'attr': {
                                        'class': 'form-control bg-dark text-white border-secondary',
                                        'placeholder': 'Votre nom complet',
                                        'required': 'required'
                                    }
                                }) }}
                                <div class="form-text text-light opacity-75">Entrez votre nom complet</div>
                                <div class="invalid-feedback">
                                    {{ form_errors(registrationForm.nom) }}
                                </div>
                            </div>

                            <div class="mb-3">
                                {{ form_label(registrationForm.plainPassword.first, 'Mot de passe', {'label_attr': {'class': 'form-label text-white'}}) }}
                                {{ form_widget(registrationForm.plainPassword.first, {
                                    'attr': {
                                        'class': 'form-control bg-dark text-white border-secondary',
                                        'required': 'required'
                                    }
                                }) }}
                                <div class="form-text text-light opacity-75">
                                    Le mot de passe doit contenir au moins 6 caractères, une lettre et un chiffre
                                </div>
                                <div class="invalid-feedback">
                                    {{ form_errors(registrationForm.plainPassword.first) }}
                                </div>
                            </div>

                            <div class="mb-3">
                                {{ form_label(registrationForm.plainPassword.second, 'Confirmer le mot de passe', {'label_attr': {'class': 'form-label text-white'}}) }}
                                {{ form_widget(registrationForm.plainPassword.second, {
                                    'attr': {
                                        'class': 'form-control bg-dark text-white border-secondary',
                                        'required': 'required'
                                    }
                                }) }}
                                <div class="invalid-feedback">
                                    {{ form_errors(registrationForm.plainPassword.second) }}
                                </div>
                            </div>

                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-user-plus me-2"></i>S'inscrire
                                </button>
                                <a href="{{ path('app_login') }}" class="btn btn-outline-light">
                                    <i class="fas fa-sign-in-alt me-2"></i>Déjà inscrit ? Connectez-vous
                                </a>
                            </div>
                        {{ form_end(registrationForm) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Validation du formulaire côté client
        const form = document.querySelector('.needs-validation');
        
        form.addEventListener('submit', function(event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        });

        // Vérification de l'email en temps réel
        const emailInput = document.querySelector('#registration_form_email');
        if (emailInput) {
            emailInput.addEventListener('blur', function(e) {
                const email = e.target.value;
                if (email && email.includes('@')) {
                    fetch('{{ path("app_register_check_email") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: 'email=' + encodeURIComponent(email)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.exists) {
                            emailInput.setCustomValidity(data.message);
                            const feedback = emailInput.parentNode.querySelector('.invalid-feedback');
                            if (feedback) {
                                feedback.textContent = data.message;
                            }
                        } else {
                            emailInput.setCustomValidity('');
                        }
                        emailInput.classList.add('was-validated');
                    })
                    .catch(error => {
                        console.error('Erreur lors de la vérification de l\'email:', error);
                    });
                }
            });
        }
    });
</script>
{% endblock %}
